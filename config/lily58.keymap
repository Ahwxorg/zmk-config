/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <25 26 27 28>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <31 32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        first_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  TAB  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |  BSP  |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC     &kp N1  &kp N2  &kp N3     &kp N4  &kp N5                           &kp N6     &kp N7  &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB     &kp Q   &kp W   &kp E      &kp R   &kp T                            &kp Y      &kp U   &kp I      &kp O    &kp P     &kp MINUS
&kp LCTRL   &kp A   &kp S   &kp D      &kp F   &kp G                            &kp H      &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHIFT  &kp Z   &kp X   &kp C      &kp V   &kp B     &kp LBKT     &kp RBKT  &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                            &kp GRAVE  &mo 1   &kp LALT  &kp SPACE    &kp RET   &kp GRAVE  &mo 2   &kp DEL
            >;
        };

        second_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |  LCLK  |  | RCLK  |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans                                    &trans        &trans        &trans        &trans        &trans        &trans
&kp TAB     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                              &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp MINUS
&kp LCTRL   &kp TAB       &trans        &trans        &trans        &trans                                    &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &kp SEMI      &kp SQT
&kp LSHIFT  &trans        &trans        &trans        &trans        &trans        &mkp LCLK    &kp GRAVE      &kp BSLH      &kp EQUAL     &kp COMMA     &kp PERIOD    &kp FSLH      &kp RSHFT
                                        &kp LSHIFT    &mo 1         &kp LALT      &kp SPACE    &kp BACKSPACE  &kp GRAVE     &mo 1         &kp DEL
            >;
        };

        third_layer {
            bindings = <
&trans      &trans   &trans  &trans  &trans  &trans                           &trans             &trans           &trans  &trans   &trans   &trans
&kp F1      &kp F2   &kp F3  &kp F4  &kp F5  &kp F6                           &kp F7             &kp F8           &kp F9  &kp F10  &kp F11  &kp F12
&kp LCTRL   &kp TAB  &trans  &trans  &trans  &kp LBKT                         &kp RBKT           &trans           &trans  &trans   &trans   &trans
&kp LSHIFT  &trans   &trans  &trans  &trans  &trans    &trans       &trans    &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans   &trans   &kp RSHFT
                             &trans  &trans  &trans    &kp SPACE    &kp BSPC  &trans             &trans           &trans
            >;
        };
    };
};
